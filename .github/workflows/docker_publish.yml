name: docker_publish

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - "AutoGenerator"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
permissions:
  contents: read
  packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/youtubeclipplaylist/playlistautogenerator
          tags: |
            latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Create a Access Token with `read:packages` and `write:packages` scopes
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./AutoGenerator/AutoGenerator
          file: ./AutoGenerator/AutoGenerator/Dockerfile
          push: true
          target: final
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          # Cache to regietry instead of gha to avoid the capacity limit.
          cache-from: type=registry,ref=ghcr.io/youtubeclipplaylist/playlistautogenerator:cache
          cache-to: type=registry,ref=ghcr.io/youtubeclipplaylist/playlistautogenerator:cache,mode=max
          sbom: true
          provenance: true
